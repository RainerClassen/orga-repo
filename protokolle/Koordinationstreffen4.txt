Agenda:
1. Disziplin
2. Nutzung von Johannes Sessions
3. Mickey Nutzung WahtsAppGruppe
4. Struktur Shared Library
5. Abgrenzung Pflicht/Option
6. Arbeitspakete Shared Library





1. Disziplin
Andreas bemängelt Unpünktlichkeit zu den Besprechungen.
Meeting Links werden in der WhatsApp AWDevOps Academy mindestens 15 min vor der Besprechung

2. Nutzung von Johannes Sessions
Vorschlag von Andreas: Der Aussschuss bekommt zunächst eine Session mit Johannes um überschneidende Fragen zu klären.
Jedes Team gibt 15 Minuten ab.
Vorschlag wird angenommen.

3. Mickey Nutzung WhatsAppGruppe
Mickey wird langsamer. Viele Jobs laufen parallel durch Webhooks
Beschluss: Webhooks werden bis auf weiters wieder ausgebaut.
WhatsApp Gruppe ABProjekt Mickey wird genutzt um Bescheid zu sagen wenn man auf Mickey arbeitet.

4. Struktur Shared Library
Andreas schlägt vor die Klassen in der Shared Library nach ihrer Funktion zu benennen:
z.B. statt vars/infincompile.groovy vars/mvn.groovy
damit im Jenkinsfile dann z.B. mvn.compile(...) aufgerufen werden kann.
src/de/devopsdus2020/....

Definition von core und external
Siehe Grafik

5. Abgrenzung Pflicht/Option
Maven Lifecycle ist Pflicht

6. Arbeitspakete Shared Library
Teams arbeiten nacheinander den Maven Lifecycle ab.

INFIN beginnt das Design Pattern mit MVN Compile umzusetzen.
BBROW folgt mit MVN Test
NGINY Sonarqube
SCSLS MVN Package
GRYNS MVN Deploy to Nexus



 TODO sicherstellen dass ArtefakteID Konvention entspricht


Ausschuss spricht mit Johannes um 12 Uhr
Nächstes Treffen nach der Remote Session ist um 1600 Uhr


Gemeinsame Fragen an Johannes:
Info an Johannes: morgen Streik ÖPNV, Schlüssel hat Andreas. Frühstens 0830 im Allynet

1. Max Anzahl Commits auf GitHub 2000 ?
2. Werden die Artefakte in einer Bulid Stage peristent abgelegt oder nur getestest ob kompiliert wird.
3. Grüne Pipeline wenn compile fehlschägt ?
4. kubectl auf Mickey Wo?
5. excecute.txt ?


Anworten aus remote-session mit Johannes:

1. Johannes hat kein Wissen einer Restriktion. Wenn doch eine existieren sollte, kann er sich lediglich eine Reduzierung auf commits/Tag vorstellen.

2. Man sollte sich nicht darauf verlassen, dass Dateien persistent gespeichert werden. Sollte man dies wünschen, muss dies explizit angewiesen werden. Das compile am besten innerhalb des packages wiederholen.

3./5. execute hat als Rückgabewert einen Prozess, der wieder verschwindet nach Ausführung. Deshalb innerhalb des Prozesses in eine Variable schreiben und diese dann auswerten.
process.exitValue()
Jenkins geht davon aus, dass alles mit Rückgabewert 0 ok ist, ein Prozess wird wahrscheinlich so interpretiert.

Verwendung von serializable als extent in Klassen?
serializable verwandelt die Infos in ASCII-Code, den man anschließend zur Auswertung weiterleiten kann. J. kann sich nicht vorstellen, dass wir das brauchen.
